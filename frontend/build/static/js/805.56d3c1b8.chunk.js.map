{"version":3,"file":"static/js/805.56d3c1b8.chunk.js","mappings":"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","sources":["components/Currency.js","pages/CartPage.js"],"sourcesContent":["\r\n\r\nconst Currency = ({ price }) => {\r\n    return Intl.NumberFormat(\"en-IN\", {\r\n      style: \"currency\",\r\n      currency: \"INR\",\r\n      minimumFractionDigits: 2\r\n    }).format(price);\r\n  }\r\n  \r\n  export default Currency\r\n","import \"../styles/CartPage.css\";\r\nimport { useCart } from \"../context/cart\";\r\nimport { useAuth } from \"../context/auth\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { IoCart } from \"react-icons/io5\";\r\nimport Currency from \"../components/Currency\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport { MdShoppingCartCheckout } from \"react-icons/md\";\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst CartPage = () => {\r\n  const [cart, setCart] = useCart();\r\n  const [auth, setAuth] = useAuth();\r\n  const [clientToken, setClientToken] = useState(\"\");\r\n  const [instance, setInstance] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const removeCartItem = (pid) => {\r\n    try {\r\n      let myCart = [...cart];\r\n      let index = myCart.findIndex((item) => item._id === pid);\r\n      myCart.splice(index, 1);\r\n      setCart(myCart);\r\n      localStorage.setItem(\"cart\", JSON.stringify(myCart));\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  const totalPrice = () => {\r\n    try {\r\n      let total = 0;\r\n      cart?.map((item) => {\r\n        const itemPrice = parseFloat(item.price);\r\n        return (total += itemPrice);\r\n      });\r\n\r\n      return <Currency price={total} />;\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  const getToken = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/v1/product/braintree/token`\r\n      );\r\n      setClientToken(data?.clientToken);\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getToken();\r\n  }, [auth?.token]);\r\n\r\n  const handlePayment = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { nonce } = await instance.requestPaymentMethod();\r\n      const { data } = await axios.post(\r\n        `/api/v1/product/braintree/payment`,\r\n        { nonce, cart }\r\n      );\r\n      setLoading(false);\r\n      localStorage.removeItem('cart');\r\n      setCart([])\r\n      navigate('/profile/user/orders')\r\n      toast.success('Payment Complete Successfully')\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cart-page\">\r\n        <div className=\"cart-item\">\r\n          <div className=\"items\">\r\n            {cart?.map((p) => {\r\n              return (\r\n                <>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-img\">\r\n                      <img\r\n                        src={`/api/v1/product/product-photo/${p._id}`}\r\n                        alt={p.name}\r\n                      />\r\n                    </div>\r\n                    <div className=\"card-info\">\r\n                      <p className=\"text-title\"> {p.name} </p>\r\n                      <p className=\"text-body\"> {p.description}</p>\r\n                      <div className=\"card-footer\">\r\n                        <span className=\"text-title\">\r\n                          {\" \"}\r\n                          {<Currency price={p.price} />}{\" \"}\r\n                        </span>\r\n                        <Link className=\"card-button-link\">\r\n                          <div className=\"card-button\">\r\n                            <IoCart className=\"cart-icon\" />\r\n                          </div>\r\n                        </Link>\r\n                      </div>\r\n                      <button\r\n                        className=\"remove-btn\"\r\n                        onClick={() => removeCartItem(p._id)}\r\n                      >\r\n                        remove\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {cart.length > 0 ? (\r\n          <div className=\"cart-summary\">\r\n            <h3>Order summary</h3>\r\n            <hr />\r\n            <div className=\"cart-summary-info\">\r\n              <p>total products: {cart.length} </p>\r\n              <p>total price: {totalPrice()}</p>\r\n            </div>\r\n\r\n            {auth?.user?.address ? (\r\n              <>\r\n                <div className=\"user-address\">\r\n                  <h4>Address: {auth?.user?.address}</h4>\r\n                  <div className=\"address\"></div>\r\n                  <button\r\n                    className=\"change-address-btn\"\r\n                    onClick={() => navigate(\"/profile/user/userprofile\")}\r\n                  >\r\n                    <MdEdit className=\"edit\" />\r\n                    Change Address\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"drp-in\">\r\n                  {!clientToken || !cart.length ? (\"\") : (\r\n                    <>\r\n                      <DropIn\r\n                        options={{\r\n                          authorization: clientToken,\r\n                          paypal: {\r\n                            flow: \"vault\",\r\n                          },\r\n                        }}\r\n                        onInstance={(instance) => setInstance(instance)}\r\n                      />\r\n                      <button\r\n                        className=\"checkout-btn\"\r\n                        onClick={handlePayment}\r\n                      >\r\n                        {loading ? \"Processing...\" : \"Make Payment\"}\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"check-user\">\r\n                  {auth?.token ? (\r\n                    <button\r\n                      className=\"checkout-btn\"\r\n                      onClick={() => navigate(\"/profile/user/userprofile\")}\r\n                    >\r\n                      checkout\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      className=\"checkout-btn\"\r\n                      onClick={() =>\r\n                        navigate(\"/login\", {\r\n                          state: \"/cart\",\r\n                        })\r\n                      }\r\n                    >\r\n                      <MdShoppingCartCheckout className=\"checkout-icon\" />\r\n                      Login to Checkout\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          \"Your cart is empty\"\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n"],"names":["_ref","price","Intl","NumberFormat","style","currency","minimumFractionDigits","format","CartPage","_auth$user","_auth$user2","cart","setCart","useCart","auth","setAuth","useAuth","clientToken","setClientToken","useState","instance","setInstance","loading","setLoading","navigate","useNavigate","useEffect","async","data","axios","get","error","getToken","token","_jsx","_Fragment","children","_jsxs","className","map","p","src","concat","_id","alt","name","description","Currency","Link","IoCart","onClick","pid","myCart","index","findIndex","item","splice","localStorage","setItem","JSON","stringify","removeCartItem","length","totalPrice","total","itemPrice","parseFloat","user","address","MdEdit","DropIn","options","authorization","paypal","flow","onInstance","nonce","requestPaymentMethod","post","removeItem","toast","success","state","MdShoppingCartCheckout"],"sourceRoot":""}